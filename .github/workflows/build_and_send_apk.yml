name: Build and Send APKs

on:
  push:
    branches:
      - develop  # Ð£ÐºÐ°Ð¶Ð¸Ñ‚Ðµ Ð²ÐµÑ‚ÐºÑƒ, Ð½Ð° ÐºÐ¾Ñ‚Ð¾Ñ€ÑƒÑŽ Ð½ÑƒÐ¶Ð½Ð¾ Ñ€ÐµÐ°Ð³Ð¸Ñ€Ð¾Ð²Ð°Ñ‚ÑŒ

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Start build notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: "ðŸš§ Application build has started"
    
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Release APK
      run: ./gradlew assembleRelease

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/apk/release/app-release.apk

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: app-release
        path: ./apk

    - name: Download Debug APK
      uses: actions/download-artifact@v4
      with:
        name: app-debug
        path: ./apk

    - name: Extract version information
      id: version
      run: |
        VERSION_NAME=$(grep -oP 'versionName\s*=\s*"\K[^"]+' app/build.gradle.kts)
        VERSION_CODE=$(grep -oP 'versionCode\s*=\s*\K\d+' app/build.gradle.kts)
        echo "Version Name: $VERSION_NAME"
        echo "Version Code: $VERSION_CODE"
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

    - name: Check if APKs exist
      run: |
        if [ ! -f ./apk/app-release.apk ]; then
          echo "Release APK not found!"
          exit 1
        fi
        if [ ! -f ./apk/app-debug.apk ]; then
          echo "Debug APK not found!"
          exit 1
        fi
        echo "APKs found, proceeding to send."

    - name: Send Release APK to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        document: app/build/outputs/apk/release/app-release.apk
        message: "âœ… RELEASE build done. New apk version is ${{ steps.version.outputs.version_name }}"

    - name: Send Debug APK to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        document: app/build/outputs/apk/debug/app-debug.apk
        message: "âœ… DEBUG build done. New apk version is ${{ steps.version.outputs.version_name }}"
